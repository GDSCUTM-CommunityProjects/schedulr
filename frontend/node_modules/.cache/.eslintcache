[{"C:\\GDSC_community\\authPractice\\gdscLoginthing\\frontend\\src\\index.js":"1","C:\\GDSC_community\\authPractice\\gdscLoginthing\\frontend\\src\\App.js":"2","C:\\GDSC_community\\authPractice\\gdscLoginthing\\frontend\\src\\pages\\HomePage.js":"3","C:\\GDSC_community\\authPractice\\gdscLoginthing\\frontend\\src\\pages\\LoginPage.js":"4","C:\\GDSC_community\\authPractice\\gdscLoginthing\\frontend\\src\\components\\Header.js":"5","C:\\GDSC_community\\authPractice\\gdscLoginthing\\frontend\\src\\utils\\PrivateRoute.js":"6","C:\\GDSC_community\\authPractice\\gdscLoginthing\\frontend\\src\\context\\AuthContext.js":"7","C:\\GDSC_community\\gitty\\schedulr\\frontend\\src\\index.js":"8","C:\\GDSC_community\\gitty\\schedulr\\frontend\\src\\App.js":"9","C:\\GDSC_community\\gitty\\schedulr\\frontend\\src\\pages\\LoginPage.js":"10","C:\\GDSC_community\\gitty\\schedulr\\frontend\\src\\utils\\PrivateRoute.js":"11","C:\\GDSC_community\\gitty\\schedulr\\frontend\\src\\pages\\HomePage.js":"12","C:\\GDSC_community\\gitty\\schedulr\\frontend\\src\\components\\Header.js":"13","C:\\GDSC_community\\gitty\\schedulr\\frontend\\src\\context\\AuthContext.js":"14","C:\\GDSC_community\\gitty\\schedulr\\frontend\\src\\pages\\RegisterPage.js":"15"},{"size":274,"mtime":1668134544999,"results":"16","hashOfConfig":"17"},{"size":652,"mtime":1668139900564,"results":"18","hashOfConfig":"17"},{"size":920,"mtime":1668148771232,"results":"19","hashOfConfig":"17"},{"size":496,"mtime":1668140640307,"results":"20","hashOfConfig":"17"},{"size":492,"mtime":1668143852499,"results":"21","hashOfConfig":"17"},{"size":373,"mtime":1668143233287,"results":"22","hashOfConfig":"17"},{"size":2949,"mtime":1668148920929,"results":"23","hashOfConfig":"17"},{"size":274,"mtime":1668134544999,"results":"24","hashOfConfig":"25"},{"size":794,"mtime":1668976851656,"results":"26","hashOfConfig":"25"},{"size":496,"mtime":1668140640307,"results":"27","hashOfConfig":"25"},{"size":373,"mtime":1668143233287,"results":"28","hashOfConfig":"25"},{"size":920,"mtime":1668559282470,"results":"29","hashOfConfig":"25"},{"size":571,"mtime":1668977020897,"results":"30","hashOfConfig":"25"},{"size":3851,"mtime":1668978636999,"results":"31","hashOfConfig":"25"},{"size":917,"mtime":1668978146394,"results":"32","hashOfConfig":"25"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1yj4xsh",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1x65zgw",{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\GDSC_community\\authPractice\\gdscLoginthing\\frontend\\src\\index.js",[],[],"C:\\GDSC_community\\authPractice\\gdscLoginthing\\frontend\\src\\App.js",["82"],[],"\nimport './App.css';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport HomePage from './pages/HomePage'; \nimport LoginPage from './pages/LoginPage';\nimport Header from './components/Header';\nimport PrivateRoute from './utils/PrivateRoute';\n\nimport { AuthProvider } from './context/AuthContext';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <AuthProvider>\n    <Header />\n\n        <Routes>\n          <Route element= {<PrivateRoute><HomePage/></PrivateRoute>} path=\"/\" exact/>\n          <Route element={ <LoginPage />} path=\"/login\"/>\n        </Routes>\n</AuthProvider>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\GDSC_community\\authPractice\\gdscLoginthing\\frontend\\src\\pages\\HomePage.js",["83","84"],[],"import React, {useState, useEffect, useContext} from 'react'\r\nimport AuthContext from '../context/AuthContext';\r\n\r\n\r\nconst HomePage = () => {\r\n  let [note, setNotes] = useState([]);\r\n  let {authTokens, logoutUser } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\ngetNotes();\r\n  }, [])\r\n\r\n  let getNotes = async () => {\r\n\r\n    let response = await fetch('http://127.0.0.1:8000/api/notes',\r\n    {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${authTokens.access}`\r\n    }})\r\n    let data = await response.json();\r\n\r\n    if(response.status === 200){\r\n      setNotes(data);\r\n  }else if(response.statusText == 'Unauthorized'){\r\n    logoutUser();\r\n\r\n  }\r\n  \r\n\r\n}\r\n\r\n  return (\r\n    <div>\r\n       <ul>\r\n        {note.map(note => (\r\n          <li key={note.id}>{note.body}</li>\r\n        ))}\r\n        </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomePage","C:\\GDSC_community\\authPractice\\gdscLoginthing\\frontend\\src\\pages\\LoginPage.js",[],[],"C:\\GDSC_community\\authPractice\\gdscLoginthing\\frontend\\src\\components\\Header.js",[],[],"C:\\GDSC_community\\authPractice\\gdscLoginthing\\frontend\\src\\utils\\PrivateRoute.js",["85"],[],"import { Route, Navigate } from 'react-router-dom';\r\nimport { useContext } from 'react';\r\nimport  AuthContext  from '../context/AuthContext';\r\n\r\nconst PrivateRoute = ({children}) => {\r\n\r\n    console.log(\"privare route works\");\r\n\r\n    let {user} = useContext(AuthContext);\r\n\r\n  return (\r\n    user ? children : <Navigate to=\"/login\" />\r\n  )\r\n}\r\n\r\nexport default PrivateRoute;","C:\\GDSC_community\\authPractice\\gdscLoginthing\\frontend\\src\\context\\AuthContext.js",["86"],[],"import { createContext,useState, useEffect } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nconst AuthContext = createContext()\r\n\r\nexport default AuthContext;\r\n\r\n\r\nexport const AuthProvider = ({children}) => {\r\n\r\n    \r\n    let [authTokens, setAuthTokens] = useState(() => localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) : null);\r\n    let [user, setUser] = useState(() => localStorage.getItem('authTokens') ? jwt_decode(localStorage.getItem('authTokens')) : null);\r\n    let [loading, setLoading] = useState(true);\r\n\r\n\r\n    const navigate = useNavigate();\r\n\r\n    let loginUser = async (e ) => {\r\n        e.preventDefault();\r\n        let respone = await fetch('http://127.0.0.1:8000/api/token/', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({username: e.target.username.value, password: e.target.password.value})\r\n         } )\r\n\r\n         let data = await respone.json();\r\n         console.log('data: ', data);\r\n\r\n         if (respone.status === 200){\r\n             setAuthTokens(data);\r\n             setUser(jwt_decode(data.access));\r\n             localStorage.setItem('authTokens', JSON.stringify(data));\r\n             navigate('/');\r\n         } else {\r\n             alert('incorrect username or password');\r\n         }\r\n    }\r\n\r\n    let logoutUser = () => {\r\n        setAuthTokens(null);\r\n        setUser(null);\r\n        localStorage.removeItem('authTokens');\r\n        navigate('/login');\r\n\r\n    }\r\n\r\n    let updateToken = async () => {\r\n        console.log('update token called');\r\n        let respone = await fetch('http://127.0.0.1:8000/api/token/refresh/', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({'refresh': authTokens.refresh?.refresh})\r\n         } )\r\n\r\n         let data = await respone.json();\r\n\r\n         if (respone.status === 200){\r\n             setAuthTokens(data);\r\n             setUser(jwt_decode(data.access));\r\n             localStorage.setItem('authTokens', JSON.stringify(data));\r\n         } else {\r\n             logoutUser();\r\n         }\r\n\r\n         if(loading){\r\n             setLoading(false);\r\n         }\r\n\r\n    }\r\n\r\n    let contextData = {\r\n        user: user,\r\n        authTokens: authTokens,\r\n        loginUser: loginUser,\r\n        logoutUser: logoutUser,\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        let FourMinutes = 4 * 60 * 1000;\r\n       let interval = setInterval(() => {\r\n            if (authTokens) {\r\n                updateToken();\r\n            }\r\n         }, FourMinutes )\r\n         return () => clearInterval(interval);\r\n\r\n    }, [authTokens, loading])\r\n\r\n    return (\r\n        <AuthContext.Provider value={contextData}>\r\n            {children}\r\n            </AuthContext.Provider>\r\n    )\r\n}","C:\\GDSC_community\\gitty\\schedulr\\frontend\\src\\index.js",[],[],"C:\\GDSC_community\\gitty\\schedulr\\frontend\\src\\App.js",["87"],[],"C:\\GDSC_community\\gitty\\schedulr\\frontend\\src\\pages\\LoginPage.js",[],[],"C:\\GDSC_community\\gitty\\schedulr\\frontend\\src\\utils\\PrivateRoute.js",["88"],[],"C:\\GDSC_community\\gitty\\schedulr\\frontend\\src\\pages\\HomePage.js",["89","90"],[],"C:\\GDSC_community\\gitty\\schedulr\\frontend\\src\\components\\Header.js",[],[],"C:\\GDSC_community\\gitty\\schedulr\\frontend\\src\\context\\AuthContext.js",["91"],[],"C:\\GDSC_community\\gitty\\schedulr\\frontend\\src\\pages\\RegisterPage.js",[],[],{"ruleId":"92","severity":1,"message":"93","line":3,"column":27,"nodeType":"94","messageId":"95","endLine":3,"endColumn":33},{"ruleId":"96","severity":1,"message":"97","line":11,"column":6,"nodeType":"98","endLine":11,"endColumn":8,"suggestions":"99"},{"ruleId":"100","severity":1,"message":"101","line":26,"column":32,"nodeType":"102","messageId":"103","endLine":26,"endColumn":34},{"ruleId":"92","severity":1,"message":"104","line":1,"column":10,"nodeType":"94","messageId":"95","endLine":1,"endColumn":15},{"ruleId":"96","severity":1,"message":"105","line":96,"column":8,"nodeType":"98","endLine":96,"endColumn":29,"suggestions":"106"},{"ruleId":"92","severity":1,"message":"93","line":3,"column":27,"nodeType":"94","messageId":"95","endLine":3,"endColumn":33},{"ruleId":"92","severity":1,"message":"104","line":1,"column":10,"nodeType":"94","messageId":"95","endLine":1,"endColumn":15},{"ruleId":"96","severity":1,"message":"97","line":11,"column":6,"nodeType":"98","endLine":11,"endColumn":8,"suggestions":"107"},{"ruleId":"100","severity":1,"message":"101","line":26,"column":32,"nodeType":"102","messageId":"103","endLine":26,"endColumn":34},{"ruleId":"96","severity":1,"message":"105","line":122,"column":8,"nodeType":"98","endLine":122,"endColumn":29,"suggestions":"108"},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getNotes'. Either include it or remove the dependency array.","ArrayExpression",["109"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Route' is defined but never used.","React Hook useEffect has a missing dependency: 'updateToken'. Either include it or remove the dependency array.",["110"],["111"],["112"],{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},{"desc":"113","fix":"117"},{"desc":"115","fix":"118"},"Update the dependencies array to be: [getNotes]",{"range":"119","text":"120"},"Update the dependencies array to be: [authTokens, loading, updateToken]",{"range":"121","text":"122"},{"range":"123","text":"120"},{"range":"124","text":"122"},[284,286],"[getNotes]",[2788,2809],"[authTokens, loading, updateToken]",[284,286],[3690,3711]]