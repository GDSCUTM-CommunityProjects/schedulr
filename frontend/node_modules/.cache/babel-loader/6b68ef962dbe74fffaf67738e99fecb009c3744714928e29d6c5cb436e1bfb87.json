{"ast":null,"code":"var _jsxFileName = \"C:\\\\GDSC_community\\\\authPractice\\\\gdscLoginthing\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport jwt_decode from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport default AuthContext;\nexport const AuthProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  let [authTokens, setAuthTokens] = useState(() => localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) : null);\n  let [user, setUser] = useState(() => localStorage.getItem('authTokens') ? jwt_decode(localStorage.getItem('authTokens')) : null);\n  const navigate = useNavigate();\n  let loginUser = async e => {\n    e.preventDefault();\n    let respone = await fetch('http://127.0.0.1:8000/api/token/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: e.target.username.value,\n        password: e.target.password.value\n      })\n    });\n    let data = await respone.json();\n    console.log('data: ', data);\n    if (respone.status === 200) {\n      setAuthTokens(data);\n      setUser(jwt_decode(data.access));\n      localStorage.setItem('authTokens', JSON.stringify(data));\n      navigate('/');\n    } else {\n      alert('incorrect username or password');\n    }\n  };\n  let logoutUser = () => {\n    setAuthTokens(null);\n    setUser(null);\n    localStorage.removeItem('authTokens');\n    navigate('/login');\n  };\n  let contextData = {\n    user: user,\n    loginUser: loginUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"LDEvGwTm8XiAELnTH14Xy2K4yb8=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","useNavigate","jwt_decode","AuthContext","AuthProvider","children","authTokens","setAuthTokens","localStorage","getItem","JSON","parse","user","setUser","navigate","loginUser","e","preventDefault","respone","fetch","method","headers","body","stringify","username","target","value","password","data","json","console","log","status","access","setItem","alert","logoutUser","removeItem","contextData"],"sources":["C:/GDSC_community/authPractice/gdscLoginthing/frontend/src/context/AuthContext.js"],"sourcesContent":["import { createContext,useState, useEffect } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nconst AuthContext = createContext()\r\n\r\nexport default AuthContext;\r\n\r\n\r\nexport const AuthProvider = ({children}) => {\r\n\r\n    \r\n    let [authTokens, setAuthTokens] = useState(() => localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) : null);\r\n    let [user, setUser] = useState(() => localStorage.getItem('authTokens') ? jwt_decode(localStorage.getItem('authTokens')) : null);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    let loginUser = async (e ) => {\r\n        e.preventDefault();\r\n        let respone = await fetch('http://127.0.0.1:8000/api/token/', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({username: e.target.username.value, password: e.target.password.value})\r\n         } )\r\n\r\n         let data = await respone.json();\r\n         console.log('data: ', data);\r\n\r\n         if (respone.status === 200){\r\n             setAuthTokens(data);\r\n             setUser(jwt_decode(data.access));\r\n             localStorage.setItem('authTokens', JSON.stringify(data));\r\n             navigate('/');\r\n         } else {\r\n             alert('incorrect username or password');\r\n         }\r\n    }\r\n\r\n    let logoutUser = () => {\r\n        setAuthTokens(null);\r\n        setUser(null);\r\n        localStorage.removeItem('authTokens');\r\n        navigate('/login');\r\n\r\n    }\r\n\r\n    let contextData = {\r\n        user: user,\r\n\r\n        loginUser: loginUser,\r\n\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={contextData}>\r\n            {children}\r\n            </AuthContext.Provider>\r\n    )\r\n}"],"mappings":";;AAAA,SAASA,aAAa,EAACC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACzD,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,OAAOC,UAAU,MAAM,YAAY;AAAC;AAEpC,MAAMC,WAAW,gBAAGL,aAAa,EAAE;AAEnC,eAAeK,WAAW;AAG1B,OAAO,MAAMC,YAAY,GAAG,QAAgB;EAAA;EAAA,IAAf;IAACC;EAAQ,CAAC;EAGnC,IAAI,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,MAAMS,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC,GAAG,IAAI,CAAC;EAC5I,IAAI,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,MAAMS,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,GAAGP,UAAU,CAACM,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC,GAAG,IAAI,CAAC;EAEhI,MAAMK,QAAQ,GAAGb,WAAW,EAAE;EAE9B,IAAIc,SAAS,GAAG,MAAOC,CAAC,IAAM;IAC1BA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAIC,OAAO,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;MAC1DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEZ,IAAI,CAACa,SAAS,CAAC;QAACC,QAAQ,EAAER,CAAC,CAACS,MAAM,CAACD,QAAQ,CAACE,KAAK;QAAEC,QAAQ,EAAEX,CAAC,CAACS,MAAM,CAACE,QAAQ,CAACD;MAAK,CAAC;IAC9F,CAAC,CAAE;IAEH,IAAIE,IAAI,GAAG,MAAMV,OAAO,CAACW,IAAI,EAAE;IAC/BC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEH,IAAI,CAAC;IAE3B,IAAIV,OAAO,CAACc,MAAM,KAAK,GAAG,EAAC;MACvBzB,aAAa,CAACqB,IAAI,CAAC;MACnBf,OAAO,CAACX,UAAU,CAAC0B,IAAI,CAACK,MAAM,CAAC,CAAC;MAChCzB,YAAY,CAAC0B,OAAO,CAAC,YAAY,EAAExB,IAAI,CAACa,SAAS,CAACK,IAAI,CAAC,CAAC;MACxDd,QAAQ,CAAC,GAAG,CAAC;IACjB,CAAC,MAAM;MACHqB,KAAK,CAAC,gCAAgC,CAAC;IAC3C;EACL,CAAC;EAED,IAAIC,UAAU,GAAG,MAAM;IACnB7B,aAAa,CAAC,IAAI,CAAC;IACnBM,OAAO,CAAC,IAAI,CAAC;IACbL,YAAY,CAAC6B,UAAU,CAAC,YAAY,CAAC;IACrCvB,QAAQ,CAAC,QAAQ,CAAC;EAEtB,CAAC;EAED,IAAIwB,WAAW,GAAG;IACd1B,IAAI,EAAEA,IAAI;IAEVG,SAAS,EAAEA;EAEf,CAAC;EAED,oBACI,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAEuB,WAAY;IAAA,UACpCjC;EAAQ;IAAA;IAAA;IAAA;EAAA,QACc;AAEnC,CAAC;AAAA,GAnDYD,YAAY;EAAA,QAMJH,WAAW;AAAA;AAAA,KANnBG,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}