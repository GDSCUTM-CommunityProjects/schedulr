{"ast":null,"code":"var _jsxFileName = \"C:\\\\GDSC_community\\\\authPractice\\\\gdscLoginthing\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from 'react';\nimport { json } from 'react-router-dom';\nimport jwt_decode from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport default AuthContext;\nexport const AuthProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  let [authTokens, setAuthTokens] = useState(null);\n  let [user, setUser] = useState(null);\n  let loginUser = async e => {\n    e.preventDefault();\n    let respone = await fetch('http://127.0.0.1:8000/api/token/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: e.target.username.value,\n        password: e.target.password.value\n      })\n    });\n    let data = await respone.json();\n    console.log('data: ', data);\n    if (respone.status === 200) {\n      setAuthTokens(data);\n      setUser(data.access);\n    } else {\n      alert('incorrect username or password');\n    }\n  };\n  let contextData = {\n    loginUser: loginUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"zY+G5N+8H7wFCqhkyy+nfU1QpSs=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","json","jwt_decode","AuthContext","AuthProvider","children","authTokens","setAuthTokens","user","setUser","loginUser","e","preventDefault","respone","fetch","method","headers","body","JSON","stringify","username","target","value","password","data","console","log","status","access","alert","contextData"],"sources":["C:/GDSC_community/authPractice/gdscLoginthing/frontend/src/context/AuthContext.js"],"sourcesContent":["import { createContext,useState, useEffect } from 'react'\r\nimport { json } from 'react-router-dom';\r\n\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nconst AuthContext = createContext()\r\n\r\nexport default AuthContext;\r\n\r\n\r\nexport const AuthProvider = ({children}) => {\r\n\r\n    let [authTokens, setAuthTokens] = useState(null);\r\n    let [user, setUser] = useState(null);\r\n\r\n    let loginUser = async (e ) => {\r\n        e.preventDefault();\r\n        let respone = await fetch('http://127.0.0.1:8000/api/token/', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({username: e.target.username.value, password: e.target.password.value})\r\n         } )\r\n\r\n         let data = await respone.json();\r\n         console.log('data: ', data);\r\n\r\n         if (respone.status === 200){\r\n             setAuthTokens(data);\r\n             setUser(data.access);\r\n         } else {\r\n             alert('incorrect username or password');\r\n         }\r\n    }\r\n\r\n\r\n    let contextData = {\r\n        loginUser: loginUser,\r\n\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={contextData}>\r\n            {children}\r\n            </AuthContext.Provider>\r\n    )\r\n}"],"mappings":";;AAAA,SAASA,aAAa,EAACC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACzD,SAASC,IAAI,QAAQ,kBAAkB;AAEvC,OAAOC,UAAU,MAAM,YAAY;AAAC;AAEpC,MAAMC,WAAW,gBAAGL,aAAa,EAAE;AAEnC,eAAeK,WAAW;AAG1B,OAAO,MAAMC,YAAY,GAAG,QAAgB;EAAA;EAAA,IAAf;IAACC;EAAQ,CAAC;EAEnC,IAAI,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAChD,IAAI,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEpC,IAAIW,SAAS,GAAG,MAAOC,CAAC,IAAM;IAC1BA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAIC,OAAO,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;MAC1DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACC,QAAQ,EAAET,CAAC,CAACU,MAAM,CAACD,QAAQ,CAACE,KAAK;QAAEC,QAAQ,EAAEZ,CAAC,CAACU,MAAM,CAACE,QAAQ,CAACD;MAAK,CAAC;IAC9F,CAAC,CAAE;IAEH,IAAIE,IAAI,GAAG,MAAMX,OAAO,CAACZ,IAAI,EAAE;IAC/BwB,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEF,IAAI,CAAC;IAE3B,IAAIX,OAAO,CAACc,MAAM,KAAK,GAAG,EAAC;MACvBpB,aAAa,CAACiB,IAAI,CAAC;MACnBf,OAAO,CAACe,IAAI,CAACI,MAAM,CAAC;IACxB,CAAC,MAAM;MACHC,KAAK,CAAC,gCAAgC,CAAC;IAC3C;EACL,CAAC;EAGD,IAAIC,WAAW,GAAG;IACdpB,SAAS,EAAEA;EAEf,CAAC;EAED,oBACI,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAEoB,WAAY;IAAA,UACpCzB;EAAQ;IAAA;IAAA;IAAA;EAAA,QACc;AAEnC,CAAC;AAAA,GArCYD,YAAY;AAAA,KAAZA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}